* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

/* Navbar styling */

.navbar {
    background-color: #333;
    /* Adding padding around the children elements of the navbar */
    padding: 10px;
    display: flex;
    /* Justifying content using space-between allows us to separate the two children elements of the navbar to be separated along the horizontal axis */
    justify-content: space-between;
    align-items: center;
}

/* Removing standard styling from anchor elements within the navbar */

.navbar a {
    /* Removes the underscore from anchor elements */
    text-decoration: none;
    /* Changing the standard blue of an anchor element into white */
    color: white;
}

/* Menu styling - turning it into a flex container in order to manipulate layout easily */

.menu {
    display: flex;
    align-items: center;
}

/* Styling the list element of the menu */

.menu ul {
    /* Removing the dots that normally show in unordered lists */
    list-style: none;
    display: flex;
}

/* Adding a small margin to li elements to make the menu look cleaner */

.menu ul li {
    margin-right: 15px;
}

/* Adding a hover pseudo class for the anchor elements so that they change color when the cursor is hovering over them */

.navbar a:hover {
    color: chartreuse;
}

.logo {
    font-size: 1.5em;
    margin-left: 10px;
}

.hero {
    padding: 20px;
}

/* Styling the hamburger menu */

.menu-toggle {
    color: white;
    font-size: 25px;
    /* We will see a pointing finger when hovering over the hamburger menu */
    cursor: pointer;
    /* Hidden by default, only visible when media query fires */
    display: none; 
}

/* Media queries for smaller screens  */

@media (max-width: 599px) {
    
    /* Showing the hamburger menu */
    .menu-toggle {
        display: block;
    }

    /* Hiding the big screen menu */
    .menu {
        display: none;
        /* It's already a flex element based on previous attributes. Now changing the flex direction to column to arrange the menu items in a vertical direction */
        flex-direction: column;
        /* Position property removes the element from the regular flow and positions it relative to its closest ancestor. In this case it's the navbar */
        position: absolute;
        /* Combined with position: absolute, I then use top, left, and right to position the menu below the navbar element */
        top: 45px;
        left: 0;
        right: 0;
        background-color: #333;
        padding: 20px 0px;
    }

    .menu.active {
        display: flex;
    }

    .menu ul {
        /* Using flex-direction: column to ensure that the ul elements are stakced on top each other */
        flex-direction: column;
        /* Alinging the menu ul elements in the center */
        align-items: center;
    }

    .menu ul li {
        margin: 5px 0;
    }
}